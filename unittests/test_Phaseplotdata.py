
# Generated by Qodo Gen
from AdvancedModeling import phase_plot_data
import pytest

class TestPhasePlotData:

    # Returns correct phase-shifted lists when given valid dataframe and positive integer phases
    def test_returns_correct_phase_shifted_lists(self):
        import pandas as pd
        import numpy as np
    
        # Create a test dataframe
        data = [1, 2, 3, 4, 5]
        df = pd.Series(data)
    
        # Test with 2 phases
        result = phase_plot_data(df, 2)
    
        # Expected: two lists with phase-shifted data
        # First list: elements from index 0 to (length-phases+0) = [1, 2, 3]
        # Second list: elements from index 1 to (length-phases+1) = [2, 3, 4]
        expected = [[1, 2, 3], [2, 3, 4]]
    
        assert result == expected, f"Expected {expected}, but got {result}"

    # Returns None when phases parameter is not an integer
    def test_returns_none_when_phases_not_integer(self):
        import pandas as pd
    
        # Create a test dataframe
        data = [1, 2, 3, 4, 5]
        df = pd.Series(data)
    
        # Test with non-integer phases
        result_float = phase_plot_data(df, 2.5)
        result_str = phase_plot_data(df, "2")
        result_list = phase_plot_data(df, [2])
    
        assert result_float is None, "Should return None when phases is a float"
        assert result_str is None, "Should return None when phases is a string"
        assert result_list is None, "Should return None when phases is a list"